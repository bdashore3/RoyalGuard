name: Upload Release Binaries

on:
  release:
    types:
      - created

jobs:
  build:
    name: Upload Release Assets
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target: [
          x86_64-unknown-linux-gnu,
          armv7-unknown-linux-gnueabihf
        ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        run: |
          # Install extra packages
          echo "installing extra packages"
          sudo apt-get update
          sudo apt-get install apt-transport-https ca-certificates curl software-properties-common libopus-dev opus-tools
          # --
          # Add Docker PPA
          echo "Adding Docker PPA"
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
          # --
          # Install Docker
          echo "installing Docker"
          sudo apt-get update
          sudo apt-get install docker-ce
          # --
          # configure Docker
          echo "configuring Docker perms"
          sudo usermod -aG docker ${USER}
          sudo -u ${USER} /bin/bash
          # --
          # install cross
          echo "installing cross"
          cargo install cross
          # --
          # add target per os
          rustup target add ${{ matrix.target }}
      - name: Cache Deps
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run Tests
        run: cross test --target ${{ matrix.target }}
      - name: Build
        run: cross build --target ${{ matrix.target }} --release --verbose
      - name: Create zip files
        run: |
          zip -j RoyalGuard-${{ matrix.target }} target/${{ matrix.target }}/release/royalguard info_sample.json
      - name: Upload binaries
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./RoyalGuard-${{ matrix.target }}.zip
          asset_name: RoyalGuard-${{ matrix.target }}.zip
          asset_content_type: application/zip